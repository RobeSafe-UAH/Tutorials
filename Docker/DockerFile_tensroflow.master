
# Docker Robesafe Python TF 2.4
# Javier Araluce (RobeSafe research group - University of Alcal√°)

FROM ubuntu:20.04

LABEL maintainer "NVIDIA CORPORATION <cudatools@nvidia.com>"




RUN apt update && apt install -y --no-install-recommends \
    sudo \
    wget \
    apt-utils \
    bash \
    ca-certificates \
    kmod \
    git \
    gedit \
    gcc-8 \
    g++-8 \
    curl && \
    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
    echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    apt-get purge --autoremove -y curl \
    && rm -rf /var/lib/apt/lists/*



ENV CUDA_VERSION 11.0.3

# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a
RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-cudart-11-0=11.0.221-1 \
    cuda-compat-11-0 \
    && ln -s cuda-11.0 /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*


#NVIDIDA Driver 460.39
RUN /bin/bash -c    'wget https://us.download.nvidia.com/XFree86/Linux-x86_64/460.39/NVIDIA-Linux-x86_64-460.39.run; \  
                    chmod +x NVIDIA-Linux-x86_64-460.39.run; \
                    ./NVIDIA-Linux-x86_64-460.39.run -s -N --no-kernel-module;\
                    rm -rf NVIDIA-Linux-x86_64-460.39.run'

#Cuda 11.0
RUN /bin/bash -c    'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8; \
                    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8; \
                    wget http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run; \
                    sh cuda_11.0.2_450.51.05_linux.run; \
                    rm -rf cuda_11.0.2_450.51.05_linux.run; \
                    echo 'export PATH=/usr/local/cuda-11.0/bin:$PATH ' >> ~/.bashrc; \
                    echo 'export LD_LIBRARY_PATH=/usr/local/cuda-11.0/lib64:$LD_LIBRARY_PATH  ' >> ~/.bashrc; \ '

# CUDNN
RUN apt-get update && apt-get install -y --no-install-recommends \
    libcudnn8=$CUDNN_VERSION-1+cuda11.0 \
    && apt-mark hold libcudnn8 && \
    rm -rf /var/lib/apt/lists/*

# Tensorflow 2.4

RUN /bin/bash -c    'apt update && apt install -y --no-install-recommends; \
                    python3-dev python3-pip python3-venv; \
                    pip3 install --user --upgrade tensorflow-gpu==2.4'

# Install code 

RUN /bin/bash -c    'apt update; apt install software-properties-common apt-transport-https wget; \
                    wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -; \
                    add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"; \
                    apt install code'

